!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ledos-sa/Documents/cubo/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(NAME)	42/libft/Makefile	/^$(NAME): $(OBJS) $(OBJS_BONUS)$/;"	t
$(NAME)	makefile	/^$(NAME): $(OBJS_FOLDER) $(OBJS)$/;"	t
$(OBJS_FOLDER)	makefile	/^$(OBJS_FOLDER):$/;"	t
${OBJS_FOLDER}/%.o	makefile	/^${OBJS_FOLDER}\/%.o: %.c$/;"	t
42	42/README.md	/^# 42$/;"	c
BONUS_SRC	42/libft/Makefile	/^BONUS_SRC = ft_lstnew.c ft_lstadd_front.c ft_lstsize.c ft_lstlast.c ft_lstadd_back.c ft_lstdelon/;"	m
BUFFER_SIZE	42/get_next_line/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
BUFFER_SIZE	42/get_next_line/get_next_line_bonus.h	/^#  define BUFFER_SIZE /;"	d
CC	42/libft/Makefile	/^CC = clang$/;"	m
CC	makefile	/^CC = cc$/;"	m
CFLAGS	42/libft/Makefile	/^CFLAGS = -Wall -Wextra -Werror -O2$/;"	m
CFLAGS	makefile	/^CFLAGS = -g  -Wall -Wextra$/;"	m
FT_PRINTF_H	42/libft/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
GET_NEXT_LINE_BONUS_H	42/get_next_line/get_next_line_bonus.h	/^# define GET_NEXT_LINE_BONUS_H$/;"	d
GET_NEXT_LINE_H	42/get_next_line/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
INCLUDES_H	includes.h	/^# define INCLUDES_H$/;"	d
LIBFT_H	42/libft/libft.h	/^# define LIBFT_H$/;"	d
NAME	42/libft/Makefile	/^NAME = libft.a$/;"	m
NAME	makefile	/^NAME = cub3D$/;"	m
OBJS	42/libft/Makefile	/^OBJS = $(SRCS:.c=.o)$/;"	m
OBJS	makefile	/^OBJS = ${SRCS:%.c=$(OBJS_FOLDER)\/%.o}$/;"	m
OBJS_BONUS	42/libft/Makefile	/^OBJS_BONUS = $(BONUS_SRC:.c=.o)$/;"	m
OBJS_FOLDER	makefile	/^OBJS_FOLDER = objs$/;"	m
SRCS	42/libft/Makefile	/^SRCS = ft_isalpha.c ft_isdigit.c ft_isalnum.c ft_isascii.c ft_isprint.c ft_strlen.c ft_memset.c /;"	m
SRCS	makefile	/^SRCS = 42\/get_next_line\/get_next_line.c \\$/;"	m
all	42/libft/Makefile	/^all: $(NAME)$/;"	t
all	makefile	/^all: $(NAME)$/;"	t
bonus	42/libft/Makefile	/^bonus: $(NAME) $(OBJS_BONUS)$/;"	t
clean	42/libft/Makefile	/^clean:$/;"	t
clean	makefile	/^clean:$/;"	t
content	42/libft/libft.h	/^	void			*content;$/;"	m	struct:s_list	typeref:typename:void *
fclean	42/libft/Makefile	/^fclean:	clean$/;"	t
fclean	makefile	/^fclean: clean$/;"	t
ft_abs	42/libft/ft_putnbr_fd.c	/^static int	ft_abs(int nbr)$/;"	f	typeref:typename:int	file:
ft_alloc	42/libft/ft_split.c	/^static void	ft_alloc(const char *s, char **f, char c)$/;"	f	typeref:typename:void	file:
ft_atoi	42/libft/ft_atoi.c	/^int	ft_atoi(const char *nptr)$/;"	f	typeref:typename:int
ft_bzero	42/get_next_line/get_next_line_utils.c	/^void	*ft_bzero(void *s, int n)$/;"	f	typeref:typename:void *
ft_bzero	42/get_next_line/get_next_line_utils_bonus.c	/^void	*ft_bzero(void *s, int n)$/;"	f	typeref:typename:void *
ft_bzero	42/libft/ft_bzero.c	/^void	*ft_bzero(void *s, int n)$/;"	f	typeref:typename:void *
ft_calloc	42/get_next_line/get_next_line_utils.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_calloc	42/get_next_line/get_next_line_utils_bonus.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_calloc	42/libft/ft_calloc.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_copy	42/libft/ft_split.c	/^static void	ft_copy(const char *s, char **f, char c, int words)$/;"	f	typeref:typename:void	file:
ft_count_digits	42/libft/ft_itoa.c	/^static int	ft_count_digits(unsigned int nb, int dig)$/;"	f	typeref:typename:int	file:
ft_count_words	42/libft/ft_split.c	/^static int	ft_count_words(const char *s, char c)$/;"	f	typeref:typename:int	file:
ft_fill_str	42/libft/ft_itoa.c	/^static char	*ft_fill_str(int n, char *str, int dig, unsigned int nb)$/;"	f	typeref:typename:char *	file:
ft_format	42/libft/ft_printf.c	/^int	ft_format(va_list args, char c)$/;"	f	typeref:typename:int
ft_isalnum	42/libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	42/libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	42/libft/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	42/libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isprint	42/libft/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_itoa	42/libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_lstadd_back	42/libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	42/libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	42/libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void*))$/;"	f	typeref:typename:void
ft_lstdelone	42/libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void*))$/;"	f	typeref:typename:void
ft_lstiter	42/libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	42/libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	42/libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	42/libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	42/libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_memchr	42/libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	42/libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	42/libft/ft_memcpy.c	/^void	*ft_memcpy(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	42/libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f	typeref:typename:void *
ft_memset	42/libft/ft_memset.c	/^void	*ft_memset(void *s, int c, int n)$/;"	f	typeref:typename:void *
ft_printf	42/libft/ft_printf.c	/^int	ft_printf(const char *str, ...)$/;"	f	typeref:typename:int
ft_printptr	42/libft/ft_printf_utils.c	/^int	ft_printptr(unsigned long long p)$/;"	f	typeref:typename:int
ft_printstr	42/libft/ft_printf.c	/^int	ft_printstr(char *s)$/;"	f	typeref:typename:int
ft_put_hex	42/libft/ft_printf_utils.c	/^void	ft_put_hex(unsigned int value, int *l, int upper)$/;"	f	typeref:typename:void
ft_put_nbr	42/libft/ft_printf_utils.c	/^void	ft_put_nbr(unsigned int value, int *l, int unsig)$/;"	f	typeref:typename:void
ft_put_ptr	42/libft/ft_printf_utils.c	/^void	ft_put_ptr(unsigned long long p, int *l)$/;"	f	typeref:typename:void
ft_putchar_fd	42/libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	42/libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putnbr_fd	42/libft/ft_putnbr_fd.c	/^	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd	42/libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_split	42/libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_strbrk	42/libft/ft_strbrk.c	/^const char	*ft_strbrk(const char *str, const char *search)$/;"	f	typeref:typename:const char *
ft_strchr	42/get_next_line/get_next_line_utils.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strchr	42/get_next_line/get_next_line_utils_bonus.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strchr	42/libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strcmp	42/libft/ft_strcmp.c	/^int	ft_strcmp(char *str1, char *str2)$/;"	f	typeref:typename:int
ft_strcontain	42/libft/ft_strtrim.c	/^static int	ft_strcontain(const char *s, char c)$/;"	f	typeref:typename:int	file:
ft_strdup	42/libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f	typeref:typename:char *
ft_striteri	42/libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char*))$/;"	f	typeref:typename:void
ft_strjoin	42/get_next_line/get_next_line_utils.c	/^char	*ft_strjoin(char *s1, char *s2)$/;"	f	typeref:typename:char *
ft_strjoin	42/get_next_line/get_next_line_utils_bonus.c	/^char	*ft_strjoin(char *s1, char *s2)$/;"	f	typeref:typename:char *
ft_strjoin	42/libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strlcat	42/libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlcpy	42/libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlen	42/get_next_line/get_next_line_utils.c	/^int	ft_strlen(const char *s)$/;"	f	typeref:typename:int
ft_strlen	42/get_next_line/get_next_line_utils_bonus.c	/^int	ft_strlen(const char *s)$/;"	f	typeref:typename:int
ft_strlen	42/libft/ft_strlen.c	/^int	ft_strlen(const char *str)$/;"	f	typeref:typename:int
ft_strmapi	42/libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	42/libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnstr	42/libft/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	42/libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	42/libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	42/libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tolower	42/libft/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	42/libft/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
get_line	42/get_next_line/get_next_line.c	/^char	*get_line(char	*buf)$/;"	f	typeref:typename:char *
get_line	42/get_next_line/get_next_line_bonus.c	/^char	*get_line(char	*buf)$/;"	f	typeref:typename:char *
get_next_line	42/get_next_line/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_next_line	42/get_next_line/get_next_line_bonus.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
getlines	parser.c	/^t_list	*getlines(int fd)$/;"	f	typeref:typename:t_list *
main	main.c	/^int	main(int argc, char **argv)$/;"	f	typeref:typename:int
next	42/libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
parser	parser.c	/^void	parser(char *name)$/;"	f	typeref:typename:void
printchar	42/libft/ft_printf_utils.c	/^int	printchar(char c)$/;"	f	typeref:typename:int
re	42/libft/Makefile	/^re:	fclean all$/;"	t
re	makefile	/^re: fclean all$/;"	t
read_line	42/get_next_line/get_next_line.c	/^char	*read_line(int fd, char *buf)$/;"	f	typeref:typename:char *
read_line	42/get_next_line/get_next_line_bonus.c	/^char	*read_line(int fd, char *buf)$/;"	f	typeref:typename:char *
s_list	42/libft/libft.h	/^typedef struct s_list$/;"	s
shiftbuffer	42/get_next_line/get_next_line.c	/^char	*shiftbuffer(char *buf)$/;"	f	typeref:typename:char *
shiftbuffer	42/get_next_line/get_next_line_bonus.c	/^char	*shiftbuffer(char *buf)$/;"	f	typeref:typename:char *
so	42/libft/Makefile	/^so:$/;"	t
t_list	42/libft/libft.h	/^}	t_list;$/;"	t	typeref:struct:s_list
